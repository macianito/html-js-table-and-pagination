<script src="https://code.jquery.com/jquery-3.2.1.js"></script>
<script src="table.js"></script>

<b>CERCAR:</b> <input type="text" id="search"> <span id="paginator"> </span>
<table id="boxcom-users">
  <thead>
    <th class="id_user">ID</th>
    <th class="telefono">Teléfono</th>
    <th class="cargo">Cargo</th>
    <th class="web">Web</th>
  </thead>
  <tbody>
    <tr>
     <td class="id_user">1</td>
     <td class="telefono">1.Teléfono</td>
     <td class="cargo">1.Cargo</td>
     <td class="web">aaa</td>
    </tr>
    <tr>
      <td class="id_user">2</td>
      <td class="telefono">2.Teléfono</td>
      <td class="cargo">2.Cargo</td>
      <td class="web">2.Web</td>
    </tr>
    <tr>
      <td class="id_user">3</td>
      <td class="telefono">3.Teléfono</td>
      <td class="cargo">3.Cargo</td>
      <td class="web">3.Web</td>
    </tr>
    <tr>
      <td class="id_user">4</td>
      <td class="telefono">4.Teléfono</td>
      <td class="cargo">4.Cargo</td>
      <td class="web">aaa</td>
    </tr>
    <tr>
      <td class="id_user">5</td>
      <td class="telefono">5.Teléfono</td>
      <td class="cargo">5.Cargo</td>
      <td class="web">5.Web</td>
    </tr>
    <tr>
      <td class="id_user">6</td>
      <td class="telefono">6.Teléfono</td>
      <td class="cargo">6.Cargo</td>
      <td class="web">6.Web</td>
    </tr>
    <tr>
      <td class="id_user">7</td>
      <td class="telefono">7.Teléfono</td>
      <td class="cargo">7.Cargo</td>
      <td class="web">7.Web</td>
    </tr>
    <tr>
      <td class="id_user">8</td>
      <td class="telefono">8.Teléfono</td>
      <td class="cargo">8.Cargo</td>
      <td class="web">8.Web</td>
    </tr>
    <tr>
      <td class="id_user">9</td>
      <td class="telefono">9.Teléfono</td>
      <td class="cargo">9.Cargo</td>
      <td class="web">9.Web</td>
    </tr>
    <tr>
      <td class="id_user">10</td>
      <td class="telefono">10.Teléfono</td>
      <td class="cargo">10.Cargo</td>
      <td class="web">10.Web</td>
    </tr>
    <tr>
      <td class="id_user">11</td>
      <td class="telefono">11.Teléfono</td>
      <td class="cargo">11.Cargo</td>
      <td class="web">11.Web</td>
    </tr>
    <tr>
      <td class="id_user">12</td>
      <td class="telefono">12.Teléfono</td>
      <td class="cargo">12.Cargo</td>
      <td class="web">12.Web</td>
    </tr>
    <tr>
      <td class="id_user">13</td>
      <td class="telefono">13.Teléfono</td>
      <td class="cargo">13.Cargo</td>
      <td class="web">13.Web</td>
    </tr>
    <tr>
      <td class="id_user">14</td>
      <td class="telefono">14.Teléfono</td>
      <td class="cargo">14.Cargo</td>
      <td class="web">14.Web</td>
    </tr>
    <tr>
      <td class="id_user">15</td>
      <td class="telefono">15.Teléfono</td>
      <td class="cargo">15.Cargo</td>
      <td class="web">15.Web</td>
    </tr>
  </tbody>
</table>



<a href="javascript:pagination.init()">PAGINATE</a>
<select id="elements-page">
  <option value="4">4</option>
  <option value="10">10</option>
  <option value="50">50</option>
  <option value="300">300</option>
</select>
<a href="javascript:tbl.orderByIndex(3, 'string', true)">ORDER 0 INT</a>


<style>

  table td {
    border: 1px solid #999;
  }

  a.selected {
    font-weight: bold;
    color: #555500;
  }


  .row-hidden {
    display: none;
  }

  #boxcom-users { table-layout: fixed; width: 93% !important; border-collapse: collapse; }

  #boxcom-users thead th { text-align: left; padding: 7px 11px; color: #222; font-weight: normal; background: #ddd; word-break: break-all; position: relative; }

  #boxcom-users thead th:after { position: absolute; right: 0; top: 0; font-weight: bold; background: #800; color: #fff; padding: 0 2px; }

  #boxcom-users thead th.asc:after {content: '\2c5'; }

  #boxcom-users thead th.desc:after {content: '\2c4'; }

  #boxcom-users  tr:nth-child(odd) { background: #ededed; }

  #boxcom-users td { border: 1px solid #ddd; padding: 7px 11px; word-wrap: break-word; }


</style>


<script>

//// TABLE


/*

jQuery('#elements-page').on('change', function() {

  pagination.reload({elementsPerPage: jQuery(this).val()});

  // pantallaGestionCursos.hide();

});




jQuery(function() {

  Paginator = function(options) {

    this.init(options);

  };

  Paginator.prototype.init = function(options) {

      if(this.initiated && !options)
        return;

      options = options || {};

      this.currentPage       = options.currentPage       || 0;
      this.elementsPerPage   = options.elementsPerPage   || 4;
      this.elementsPaginador = options.elementsPaginador || 3;
      this.paginatorObj      = options.paginatorObj      || jQuery('#paginator');
      this.wrapperElements   = options.wrapperElements   || jQuery('#wrapper-elements');
      this.selectorElements  = options.selectorElements  || '.element';

      this.paginatorObj.off();

      var self = this;

      this.paginatorObj.on('click', 'a', function(evt) {

        evt.preventDefault();

        self.changePage(jQuery(evt.target).data('page'));

      });

      this.initiated = true;

      this.changePage(this.currentPage);

    };

    Paginator.prototype.createPaginator = function () { // Pagination

      var rows = this.wrapperElements.find(this.selectorElements + ':not(.row-hidden)'),
          numRows = rows.length,
          pages = Math.ceil(numRows / this.elementsPerPage);

      this.paginatorObj.empty();

      var half = Math.floor(this.elementsPaginador / 2);


      if(this.currentPage - half > 0) {
        this.paginatorObj
          .append('[ <a data-page="0" href="#" >|&lt;</a> ] ')
          .append('[ <a data-page="' + (this.currentPage - 1) + '" href="#" >&lt;</a> ] ');
      }

      var page    = Math.max(this.currentPage - half, 0),
          limitNums = Math.min(page + this.elementsPaginador, pages);

      while(page++ < limitNums) {

        var pageIndex = (page - 1); // real num of page

        var selected = pageIndex === this.currentPage ? ' selected ' : '';

        this.paginatorObj.append(' [ <a data-page="' + pageIndex + '" class="' + selected + '" href="#">' + page + '</a> ] ');

      }

      if(limitNums < pages) {
        this.paginatorObj
          .append(' [ <a data-page="' + limitNums + '" href="#" >&gt;</a> ] ')
          .append(' [ <a data-page="' + (pages - 1) + '" href="#" >&gt;|</a> ] ');
      }

    };


    Paginator.prototype.changePage = function(page) { // Pagination

      this.currentPage = page;

      var rows = this.wrapperElements.find(this.selectorElements + ':not(.row-hidden)');

      rows.hide();

      rows.slice(this.currentPage * this.elementsPerPage, (this.currentPage + 1) * this.elementsPerPage).show();

      this.createPaginator();
    };

    Paginator.prototype.reload = function(options) {

      this.init(jQuery.extend(this, options));

    };

    window.pagination = new Paginator({selectorElements: 'tr', wrapperElements: jQuery('table#boxcom-users tbody')});


});


// ORDERING ///////////////////////////7

(function($) {


  Table = function(options) {

    this.tableObj     =  options.tableObj     || jQuery('#table');
    this.searchInput  =  options.searchInput  || jQuery('#search');
    this.sortDataType =  options.sortDataType || ['int', 'string', null, 'string']; // array amb els tipus collacio per l'ordenacio de cada columna

    _setEvents.call(this);

  };



  Table.prototype.orderByIndex = function(index, typeData, asc) {

    var tBody = this.tableObj.children('tbody'),
        rows = tBody.find('tr').toArray(),
        arrayToSort = new Array(),
        arrayAssoc = {};


    for(var i = 0; i < rows.length; i++) {

      var rowDom = rows[i],
          rowHtml = $(rowDom).children('td:eq(' + index + ')').html();

      arrayToSort.push(rowHtml);

      arrayAssoc[rowHtml] ? arrayAssoc[rowHtml].push(rowDom) : arrayAssoc[rowHtml] = [rowDom];

    }

    if(typeData === 'string') {

      asc ? arrayToSort.sort(_compareStringsAsc) : arrayToSort.sort(_compareStringsDesc);

    } else {

      arrayToSort.sort(function (a, b) { return asc ? a - b : b - a ; } );

    }

    //tBody.empty();


    for(var i = 0; i < arrayToSort.length; i++) {

      var arrayRows = arrayAssoc[arrayToSort[i]];

      for(var j = 0; j < arrayRows.length; j++) {

        tBody.append(arrayRows[j]);

      }

    }

    //console.log(arrayToSort);

  };

  function _compareStringsDesc(a, b) {

    var A = a.toUpperCase(), // ignore upper and lowercase
        B = b.toUpperCase(); // ignore upper and lowercase

    if(A > B) return -1;
    if(A < B) return 1;
    return 0; // names must be equal

  }

  function _compareStringsAsc(a, b) {

    var A = a.toUpperCase(), // ignore upper and lowercase
        B = b.toUpperCase(); // ignore upper and lowercase

    if(A < B) return -1;
    if(A > B) return 1;
    return 0; // names must be equal

  }

  var _setEvents = function() {

    /// ORDENATION ////////////

    var tableHeaders = this.tableObj.find('> thead > tr > th'),
        self = this;

    this.tableObj.off().on('click', '> thead > tr > th', function() {

      var header = $(this);
          index = header.index();

      if(!self.sortDataType[index])
        return;

      if(!header.is('.asc, .desc')) {

        tableHeaders.removeClass('asc desc');

        header.toggleClass('asc');

      } else {

        header.toggleClass('asc desc');
      }

      var sortDataType = self.sortDataType[index];

      self.orderByIndex(index, sortDataType, header.hasClass('asc') ? true : false);

      pagination.reload();

    });

    // SEARCH BOX ////////////////

    this.searchInput.on('keyup', function() {

      var searchVal = this.value,
          rows = self.tableObj.find('tbody tr');


      if(searchVal === '') {
        rows.removeClass('row-hidden');
        return;
      }

      var searchValRegex = new RegExp(searchVal);

      rows.each(function() {

        var element = $(this),
            //children = element.children('.name, .email, .login'),
            children = element.children('td'),
            found = false;

        for(var len = children.length, i = 0; i < len; i++) {

          if(searchValRegex.test(children[i].innerHTML)) {
            element.removeClass('row-hidden');

            return;
          } else {
            element.addClass('row-hidden');
          }

        }

      });

      pagination.reload();

    });



  }

  window.tbl = new Table({tableObj : jQuery('#boxcom-users')});


})(jQuery);


//// END TABLE

*/

</script>
